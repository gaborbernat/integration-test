name: $(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.rr)

variables:
  "System.PreferGit": true

trigger:
  batch: true
  branches:
    include:
    - master
    - refs/tags/*

jobs:
- template: build-project.yml
  parameters: {name: setuptools, git: "https://github.com/pypa/setuptools.git"}
- template: build-project.yml
  parameters: {name: pip, git: "https://github.com/pypa/pip.git"}
- template: build-project.yml
  parameters: {name: virtualenv, git: "https://github.com/pypa/virtualenv.git"}
- template: build-project.yml
  parameters: {name: wheel, git: "https://github.com/pypa/wheel.git"}
- template: build-project.yml
  parameters: {name: tox, git: "https://github.com/tox-dev/tox.git"}


- job: run_test
  pool: {vmImage: 'Ubuntu 16.04'}
  condition: always()
  dependsOn:
  - build_setuptools
  - build_wheel
  - build_virtualenv
  - build_pip
  - build_tox
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: download coverage files for run
    inputs:
      buildType: current
      downloadType: specific
      itemPattern: wheel-*/*
      downloadPath: $(Build.StagingDirectory)

  - task: UsePythonVersion@0
    displayName: setup python
    inputs:
      versionSpec: 3.7
  - script: "python3.7 -m pip install -U pip==19.0.1 devpi-server==4.8.0 devpi-client==4.2.0 twine==1.12.1"
    displayName: install devpi
  - script: |
      devpi-server --start --init
      devpi use http://localhost:3141
      devpi user -c test password=123
      devpi login test --password=123
      devpi index -c dev bases=root/pypi
      devpi use test/dev
      ls -alth $(Build.StagingDirectory)/*/*.whl
      devpi upload $(Build.StagingDirectory)/*/*.whl
    displayName: bootstrap devpi

  - script: "python3.7 -m pip install -U pytest  requests"
    displayName: install pytest
  - script: "env MASTER_WHEELS=$(Build.StagingDirectory) PIP_INDEX_URL=http://localhost:3141/test/dev python3.7 -m pytest tests"
    displayName: run tests

  - script: devpi-server --stop
    condition: succeededOrFailed()
    displayName: stop devpi
